@using BlazorFrontendTodo.Pages
@inject CustomAuthenticationStateProvider _authenticationStateProvider
@inject NavigationManager _navManager

<CascadingAuthenticationState>
  <Router AppAssembly="@typeof(App).Assembly">
    <Found Context="routeData">
      <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
        <NotAuthorized>
          @if (routeData.PageType == typeof(RegisterPage))
          {
            <RegisterPage />
          }
          else if (!context.User.Identity.IsAuthenticated)
          {
            <RedirectToLogin />
          }
          else
          {
            <p>You are not authorized to access this resource.</p>
          }
        </NotAuthorized>
      </AuthorizeRouteView>
    </Found>
    <NotFound>
      <LayoutView Layout="@typeof(MainLayout)">
        <p>Sorry, there's nothing at this address.</p>
      </LayoutView>
    </NotFound>
  </Router>
</CascadingAuthenticationState>

@code {
  protected override async Task OnInitializedAsync()
  {
    var isTokenValid = await _authenticationStateProvider.IsTokenValid();
    if (isTokenValid)
    {
      _navManager.NavigateTo("/todo");
    }
    else
    {
      //sørger for at den ikke redirector til login siden fra registreringssiden
      var currentUri = _navManager.Uri;
      var relativeUri = currentUri.Replace(_navManager.BaseUri, "/");

      if (relativeUri is not "/register") 
      {
        _navManager.NavigateTo("/login");
      }
    }
  }
}